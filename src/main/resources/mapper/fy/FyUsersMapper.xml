<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tingtu.ax.admin.project.fy.mapper.FyUsersMapper">
  <resultMap id="BaseResultMap" type="com.tingtu.ax.admin.project.fy.entity.FyUsers">
    <!--@mbg.generated-->
    <!--@Table fy_users-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_passwd" jdbcType="VARCHAR" property="userPasswd" />
    <result column="privileges" jdbcType="BIGINT" property="privileges" />
    <result column="court_id" jdbcType="VARCHAR" property="courtId" />
    <result column="zone_id" jdbcType="VARCHAR" property="zoneId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, user_name, user_passwd, `privileges`, court_id, zone_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from fy_users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from fy_users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tingtu.ax.admin.project.fy.entity.FyUsers" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into fy_users (user_id, user_name, user_passwd,
      `privileges`, court_id, zone_id
      )
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userPasswd,jdbcType=VARCHAR},
      #{privileges,jdbcType=BIGINT}, #{courtId,jdbcType=VARCHAR}, #{zoneId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tingtu.ax.admin.project.fy.entity.FyUsers" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into fy_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPasswd != null">
        user_passwd,
      </if>
      <if test="privileges != null">
        `privileges`,
      </if>
      <if test="courtId != null">
        court_id,
      </if>
      <if test="zoneId != null">
        zone_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPasswd != null">
        #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="privileges != null">
        #{privileges,jdbcType=BIGINT},
      </if>
      <if test="courtId != null">
        #{courtId,jdbcType=VARCHAR},
      </if>
      <if test="zoneId != null">
        #{zoneId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tingtu.ax.admin.project.fy.entity.FyUsers">
    <!--@mbg.generated-->
    update fy_users
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPasswd != null">
        user_passwd = #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="privileges != null">
        `privileges` = #{privileges,jdbcType=BIGINT},
      </if>
      <if test="courtId != null">
        court_id = #{courtId,jdbcType=VARCHAR},
      </if>
      <if test="zoneId != null">
        zone_id = #{zoneId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tingtu.ax.admin.project.fy.entity.FyUsers">
    <!--@mbg.generated-->
    update fy_users
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      user_passwd = #{userPasswd,jdbcType=VARCHAR},
      `privileges` = #{privileges,jdbcType=BIGINT},
      court_id = #{courtId,jdbcType=VARCHAR},
      zone_id = #{zoneId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
